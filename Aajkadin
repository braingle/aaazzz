# Install the required Azure PowerShell module if not already installed
if (-not (Get-Module -Name Az.Resources -ListAvailable)) {
    Install-Module -Name Az.Resources -Scope CurrentUser -Force
}

# Set the output CSV file path
$outputFilePath = "policy-export.csv"

# Get all Azure subscriptions
$subscriptions = Get-AzSubscription | Select-Object SubscriptionId

# Loop through each subscription and export its policy definitions and policy states
$results = foreach ($subscription in $subscriptions) {
    $subscriptionId = $subscription.SubscriptionId

    # Set the current subscription context
    Set-AzContext -Subscription $subscriptionId | Out-Null

    # Get all policy definitions
    $policyDefinitions = Get-AzPolicyDefinition | Select-Object Name, Description, PolicyType, Mode, Metadata

    # Get all policy states
    $policyStates = Get-AzPolicyState | Select-Object PolicyDefinitionName, DisplayName, Description, PolicyDefinitionReferenceId, ResourceId, PolicySetDefinitionName, PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, SubscriptionId, IsCompliant, EnforcementMode, CreatedOn, LastUpdatedOn, PolicyDecision, AdditionalProperties

    # Join policy definitions and policy states on the PolicyDefinitionName column
    $joinedData = $policyStates | ForEach-Object {
        $policyDefinition = $policyDefinitions | Where-Object {$_.Name -eq $_.PolicyDefinitionName}
        $_ | Add-Member -NotePropertyName "Description" -NotePropertyValue $policyDefinition.Description -PassThru | Add-Member -NotePropertyName "PolicyType" -NotePropertyValue $policyDefinition.PolicyType -PassThru | Add-Member -NotePropertyName "Mode" -NotePropertyValue $policyDefinition.Mode -PassThru | Add-Member -NotePropertyName "Metadata" -NotePropertyValue $policyDefinition.Metadata -PassThru
    }

    # Add the subscription ID to each row
    $joinedData | Add-Member -NotePropertyName "SubscriptionId" -NotePropertyValue $subscriptionId -PassThru
}

# Export the results to a CSV file
$results | Export-Csv -Path $outputFilePath -NoTypeInformation
